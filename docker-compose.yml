version: "3.3"
services:
    client:
        build: ./client
        command: npm start
        volumes:
            - ./client:/app
            - geek-regime-client:/app/node_modules
        networks:
            - geek-regime
        ports:
            - 10000:3000
        depends_on:
            - server
            - postgres
            - redis
    server:
        build: ./server
        command: npm start
        volumes:
            - ./server:/app
            - geek-regime-server:/app/node_modules
        networks:
            - geek-regime
        depends_on:
            - postgres
            - redis
        environment:
            - HOST
            - PORT
            - POSTGRES_URL
            - POSTGRES_URL_TEST
            - REDIS_HOST
            - REDIS_PORT
            - SESSION_NAME
            - SESSION_SECRET
            - URL
    postgres:
        image: postgres:12.1-alpine
        restart: always
        volumes:
            - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - postgres-data:${PGDATA}
        networks:
            - geek-regime
        ports:
            - 5433:${POSTGRES_PORT}
        environment:
            - PGDATA=${PGDATA}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
    redis:
        image: redis:5.0.7-alpine
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - redis-data:/data
        networks:
            - geek-regime
networks:
    geek-regime:
        driver: bridge
volumes:
    geek-regime-client:
        driver: local
    geek-regime-server:
        driver: local
    postgres-data:
        driver: local
    redis-data:
        driver: local
